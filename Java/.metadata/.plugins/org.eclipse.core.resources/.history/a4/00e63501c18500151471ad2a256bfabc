import java.awt.*;
import java.awt.event.*;


public class Yard extends Frame {
	public static final int BLOCK_SIZE = 15;
	public static final int ROWS = 30;
	public static final int COLS = 30;
	public static final String TITLE = "贪吃蛇游戏";
	Snake snake = new Snake();
	public static void main(String[] args) {
		new Yard().launch();
	}
	private void launch() {
		Frame frame = new Frame(TITLE);
		Panel panel = new Panel();
		frame.setLayout(null);
		frame.setSize(this.BLOCK_SIZE * this.COLS + 100, this.BLOCK_SIZE * this.ROWS + 100);
		frame.setBackground(Color.BLACK);
		frame.add(panel);
		frame.setLocation(400, 150);
		frame.setResizable(false);
		frame.setVisible(true);
		frame.addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent e) {
				System.exit(0);
			}
		});
		this.addKeyListener(new KeyMonitor());
		panel.setLocation(50,50);
		panel.setBounds(50, 50, this.BLOCK_SIZE * this.COLS, this.BLOCK_SIZE * this.ROWS);
		panel.setBackground(Color.DARK_GRAY);
		panel.paint(getGraphics());
		new Thread(new PaintThread()).start();
	}
	
	public void paint(Graphics g) {
		Color c = g.getColor();
		g.setColor(Color.BLACK);
		for (int i = 0; i < this.COLS - 1; i++) {
			g.drawLine(this.BLOCK_SIZE * i, 0, this.BLOCK_SIZE * i,
					this.BLOCK_SIZE * this.ROWS);
		}
		for (int i = 0; i < this.ROWS - 1; i++) {
			g.drawLine(0, this.BLOCK_SIZE * i, this.BLOCK_SIZE * this.COLS,
					this.BLOCK_SIZE * i);
		}
	}
	
	
	private class PaintThread implements Runnable {

		public void run() {
			repaint();
			try {
				Thread.sleep(100);
			} catch (InterruptedException e) {
				// TODO 自动生成的 catch 块
				e.printStackTrace();
			}
		}
		
	}
	
	private class KeyMonitor extends KeyAdapter {
		public void keyPressed(KeyEvent e) {
			snake.keyPressed(e);
		}
	}
}
